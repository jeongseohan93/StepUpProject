<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="academy">

	<!-- 부서목록 조회 -->
	<select id="academyEntire" resultType="academyVO">

		select * from academy
						  LIMIT #{startIndex}, #{pageSize}

	</select>

	<select id = "academyName" resultType="academyVO" >
		select * from academy
	</select>

	<select id="academyPic" resultType="academyVO">
		select * from pic
		where academy_idx = #{academy_idx}
	</select>

	<select id="academyEntireRegion" resultType="academyVO">

		select distinct academy_region
		from academy
		where academy_region is not null

	</select>

	<select id="academyEntireCategory" resultType="academyVO">

		select distinct academy_category
		from academy
		where academy_category is not null

	</select>

	<select id = "academyDetail" resultType="academyVO" parameterType="int">

		select * from academy where academy_idx = #{academy_idx}

	</select>

	<select id="academyRating" resultType="ratingVO" parameterType="int" >

		SELECT AVG(rating) AS rating
		FROM review
		WHERE academy_idx = #{academy_idx}

	</select>

	<select id="academyReview" resultType="academyreviewVO" parameterType="int" >

		select * from review
		where academy_idx = #{academy_idx}

	</select>

	<select id = "picView" parameterType="int" resultType="picVO">

		select * from pic
		where academy_idx = #{academy_idx}

	</select>

	<select id="searchName" resultType="academyVO">

		SELECT * FROM ACADEMY
		WHERE academy_name LIKE CONCAT('%', #{keyword}, '%')

	</select>

	<select id="searchSubject" resultType="academyVO">

		SELECT * FROM ACADEMY
		WHERE academy_category LIKE CONCAT('%', #{keyword}, '%')

	</select>

	<select id="searchRegion" resultType="academyVO">

		SELECT * FROM ACADEMY
		WHERE academy_region LIKE CONCAT('%', #{keyword}, '%')

	</select>

	<insert id="insertResume" parameterType="resumeVO">
		INSERT INTO resume (academy_idx, instructor_idx, self_introduction)
		VALUES (#{academy_idx}, #{instructor_idx}, #{self_introduction});
	</insert>

	<select id="resumeCount" resultType="int" parameterType="int">

		SELECT COUNT(*) AS total_count
		FROM resume
		WHERE academy_idx = #{academy_idx}
		  AND (approval_status IS NULL OR (approval_status != 'APPROVED' AND approval_status != 'REJECTED'));


	</select>

	<select id = "resumeView" parameterType="int" resultType="resumeVO">
		SELECT
			r.resume_idx,
			r.self_introduction,
			r.academy_idx,
			r.instructor_idx,
			r.created_at,
			im.instructor_name,
			im.instructor_email,
			im.instructor_phone,
			im.instructor_category,
			im.instructor_address,
			im.instructor_gender
		FROM resume r
				 JOIN instructor_member im ON r.instructor_idx = im.instructor_idx
		WHERE r.academy_idx = #{academy_idx}
		  AND (r.approval_status != 'APPROVED' OR r.approval_status IS NULL)  -- 승인된 상태 제외
		  AND (r.approval_status != 'REJECTED' OR r.approval_status IS NULL)  -- 거절된 상태 제외
	</select>

	<update id="approveAndLinkInstructor" parameterType="map">
		UPDATE instructor_member
		SET  academy_idx = #{academy_idx}
		WHERE instructor_idx = #{instructor_idx}
	</update>

	<update id="linkInstructorToResume" parameterType="map">
		UPDATE resume
		SET  approval_status = 'APPROVED',
			 academy_idx = #{academy_idx}
		WHERE instructor_idx = #{instructor_idx}
	</update>

	<select id = "selectOneAcademy" resultType="academyVO" parameterType="int">

		select * from academy
		where academy_idx = #{academy_idx}

	</select>

	<update id="updateAcademyInfor" parameterType="academyVO">
		UPDATE academy
		SET academy_name = #{academy_name},
			academy_pwd = #{academy_pwd},
			academy_phone = #{academy_phone},
			academy_content = #{academy_content},
			academy_bus_num = #{academy_bus_num},
			academy_address = #{academy_address},
			academy_category = #{academy_category},
			academy_sub = #{academy_sub},
			academy_email = #{academy_email}
		WHERE academy_idx = #{academy_idx}
	</update>

	<insert id  = "insertPic" parameterType="picVO">
		insert into pic values (
								   null,
								   #{pic_name},
								   #{academy_idx}
							   )
	</insert>


	<!-- 작업중 -->
	<update id="rejectResume" parameterType="int">
		UPDATE resume
		SET approval_status = 'REJECTED'
		WHERE resume_idx = #{resume_idx}
	</update>

	<select id="resumeList" parameterType="int" resultType="resumeVO">
		SELECT r.resume_idx, a.academy_name, r.approval_status, r.updated_at
		FROM resume r
				 JOIN academy a ON r.academy_idx = a.academy_idx
		WHERE r.instructor_idx = #{instructor_idx}
	</select>

	<select id = "academyReviewMember" parameterType="String" resultType="academyreviewVO">

		select * from review
			where stepup_id = #{stepup_id}

	</select>

	<delete id="academyReviewDelete" parameterType="int">
		delete from review
		where review_idx = #{review_idx}
	</delete>

	<insert id = "academyReviewWrite" parameterType="academyreviewVO">

		INSERT INTO review (academy_id, stepup_id, rating, content, academy_idx)
		VALUES (
		        #{academy_id},
		        #{stepup_id},
		        #{rating},
		        #{content},
		        #{academy_idx}
			   )
	</insert>

	<select id = "academyReviewSelect" parameterType="int" resultType="academyreviewVO">
		select * from review
			where review_idx = #{review_idx}
	</select>

	<update id="academyReviewUpdate" parameterType="academyreviewVO">
		UPDATE review
		SET academy_id = #{academy_id},
			stepup_id = #{stepup_id},
			rating = #{rating},
			content = #{content},
			academy_idx = #{academy_idx}
		WHERE review_idx = #{review_idx}
	</update>
</mapper>








